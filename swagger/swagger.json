{
  "openapi": "3.0.0",
  "info": {
    "title": "Library API",
    "version": "1.0.0",
    "description": "This API manages a library system, including books, authors, users, and loans."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    },
    {
      "url": "https://your-live-render-url.onrender.com",
      "description": "Render server"
    }
  ],
  "paths": {
    "/books": {
      "get": {
        "summary": "Get all books",
        "responses": {
          "200": {
            "description": "List of all books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Books"
        ]
      },
      "post": {
        "summary": "Add a new book",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book created"
          },
          "400": {
            "description": "Validation error"
          }
        },
        "tags": [
          "Books"
        ]
      }
    },
    "/books/{id}": {
      "get": {
        "summary": "Get a book by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book found"
          },
          "404": {
            "description": "Book not found"
          }
        },
        "tags": [
          "Books"
        ]
      },
      "put": {
        "summary": "Update a book by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book updated"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Book not found"
          }
        },
        "tags": [
          "Books"
        ]
      },
      "delete": {
        "summary": "Delete a book by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Book deleted"
          },
          "404": {
            "description": "Book not found"
          }
        },
        "tags": [
          "Books"
        ]
      }
    },
    "/authors": {
      "get": {
        "summary": "Get all authors",
        "responses": {
          "200": {
            "description": "List of authors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Author"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Authors"
        ]
      },
      "post": {
        "summary": "Add a new author",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Author created"
          },
          "400": {
            "description": "Validation error"
          }
        },
        "tags": [
          "Authors"
        ]
      }
    },
    "/authors/{id}": {
      "get": {
        "summary": "Get an author by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Author found"
          },
          "404": {
            "description": "Author not found"
          }
        },
        "tags": [
          "Authors"
        ]
      },
      "put": {
        "summary": "Update an author by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Author updated"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Author not found"
          }
        },
        "tags": [
          "Authors"
        ]
      },
      "delete": {
        "summary": "Delete an author by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Author deleted"
          },
          "404": {
            "description": "Author not found"
          }
        },
        "tags": [
          "Authors"
        ]
      }
    },
    "/loans": {
      "get": {
        "summary": "Get all loans",
        "responses": {
          "200": {
            "description": "List of loans",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Loan"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Loans"
        ]
      },
      "post": {
        "summary": "Create a new loan",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Loan"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Loan created"
          },
          "400": {
            "description": "Validation error"
          }
        },
        "tags": [
          "Loans"
        ]
      }
    },
    "/loans/{id}": {
      "get": {
        "summary": "Get a loan by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loan found"
          },
          "404": {
            "description": "Loan not found"
          }
        },
        "tags": [
          "Loans"
        ]
      },
      "put": {
        "summary": "Update a loan by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Loan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Loan updated"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Loan not found"
          }
        },
        "tags": [
          "Loans"
        ]
      },
      "delete": {
        "summary": "Delete a loan by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Loan deleted"
          },
          "404": {
            "description": "Loan not found"
          }
        },
        "tags": [
          "Loans"
        ]
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "post": {
        "summary": "Add a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created"
          },
          "400": {
            "description": "Validation error"
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found"
          },
          "404": {
            "description": "User not found"
          }
        },
        "tags": [
          "Users"
        ]
      },
      "put": {
        "summary": "Update a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "User not found"
          }
        },
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "summary": "Delete a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "404": {
            "description": "User not found"
          }
        },
        "tags": [
          "Users"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Book": {
        "type": "object",
        "required": [
          "title",
          "isbn",
          "publishDate",
          "authorId"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "isbn": {
            "type": "string"
          },
          "publishDate": {
            "type": "string",
            "format": "date"
          },
          "genre": {
            "type": "string"
          },
          "availableCopies": {
            "type": "integer"
          },
          "totalCopies": {
            "type": "integer"
          },
          "authorId": {
            "type": "string"
          }
        }
      },
      "Author": {
        "type": "object",
        "required": [
          "name",
          "birthDate"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date"
          },
          "nationality": {
            "type": "string"
          },
          "biography": {
            "type": "string"
          }
        }
      },
      "Loan": {
        "type": "object",
        "required": [
          "userId",
          "bookId",
          "loanDate",
          "returnDate"
        ],
        "properties": {
          "userId": {
            "type": "string"
          },
          "bookId": {
            "type": "string"
          },
          "loanDate": {
            "type": "string",
            "format": "date"
          },
          "returnDate": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string",
            "enum": [
              "borrowed",
              "returned"
            ]
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "name",
          "email",
          "role"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "type": "string",
            "enum": [
              "user",
              "admin"
            ]
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Books",
      "description": "Operations related to books"
    },
    {
      "name": "Authors",
      "description": "Operations related to authors"
    },
    {
      "name": "Loans",
      "description": "Operations related to loans"
    },
    {
      "name": "Users",
      "description": "Operations related to users"
    }
  ]
}